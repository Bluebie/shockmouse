// Generated by CoffeeScript 1.8.0
var ChildProcess, Gamepad, cliclick, gamepads, gamey, mouse_delta;

Gamepad = require('./controller').Gamepad;

ChildProcess = require('child_process');

gamepads = Gamepad.devices();

console.log("gamepads:", gamepads);

console.log("connecting to first...");

gamey = new Gamepad(gamepads[0]);

console.log("connected!");

console.log("it is wireless?", gamey.wireless);

console.log("Spawning mousing servant (cliclick)");

cliclick = ChildProcess.spawn("" + __dirname + "/bin/cliclick", ['-f', '-']);

mouse_delta = {
  x: 0,
  y: 0
};

gamey.on("touchstart", function(touch) {
  console.log("on ", touch.id);
  touch.on('touchmove', function() {
    mouse_delta.x += touch.delta.x;
    return mouse_delta.y += touch.delta.y;
  });
  return touch.on('touchend', function() {
    return console.log("off", touch.id);
  });
});

gamey.on("trackPadButton", function() {
  console.log("Button!");
  return cliclick.stdin.write("c:+0,+0\n");
});

setInterval(function() {
  var convert;
  convert = function(num) {
    num = Math.round(num / 2);
    if (num < 0) {
      return "" + num;
    } else {
      return "+" + num;
    }
  };
  if (mouse_delta.x !== 0 || mouse_delta.y !== 0) {
    cliclick.stdin.write("m:" + (convert(mouse_delta.x)) + "," + (convert(mouse_delta.y)) + "\n");
    return mouse_delta = {
      x: 0,
      y: 0
    };
  }
}, 1000 / 30);

gamey.on("dPadUp", function() {
  return cliclick.stdin.write("kp:arrow-up\n");
});

gamey.on("dPadDown", function() {
  return cliclick.stdin.write("kp:arrow-down\n");
});

gamey.on("dPadLeft", function() {
  return cliclick.stdin.write("kp:arrow-left\n");
});

gamey.on("dPadRight", function() {
  return cliclick.stdin.write("kp:arrow-right\n");
});

//# sourceMappingURL=shockmouse.js.map
