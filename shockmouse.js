// Generated by CoffeeScript 1.8.0
var Gamepad, NextEvent, button_down, gamepad_graphic, gamepads, gamey, link_button, mouse_coords, tap_click_duration;

Gamepad = require('./sony_controller').Gamepad;

NextEvent = require('./next_event');

gamepads = Gamepad.devices();

console.log("gamepads:", gamepads);

console.log("connecting to first...");

gamey = new Gamepad(gamepads[0]);

console.log("connected!");

console.log("it is wireless?", gamey.wireless);

mouse_coords = {
  x: 0,
  y: 0
};

gamey.on("touchstart", function(touch) {
  var position;
  console.log("mouse move started", touch.id);
  position = NextEvent.mouse();
  touch.on('touchmove', function() {
    if (gamey.trackpad.touches.length === 1) {
      position.x += touch.delta.x;
      position.y += touch.delta.y;
      if (position.x < 0) {
        position.x = 0;
      }
      if (position.y < 0) {
        position.y = 0;
      }
      return NextEvent[gamey.report.trackPadButton ? 'mouse_drag' : 'mouse_move'](position.x, position.y);
    } else {
      return NextEvent.mouse_scroll_wheel(touch.delta.x, touch.delta.y);
    }
  });
  return touch.on('touchend', function() {
    return console.log("mouse movement complete", touch.id);
  });
});

tap_click_duration = 200;

gamey.on('touchend', function(touch) {
  var position;
  if (new Date - touch.created < tap_click_duration) {
    position = NextEvent.mouse();
    return NextEvent.mouse_click(position.x, position.y, 'left');
  }
});

button_down = null;

gamey.on("trackPadButton", function() {
  var position;
  button_down = gamey.trackpad.touches.length === 1 ? 'left' : 'right';
  position = NextEvent.mouse();
  return NextEvent.mouse_down(position.x, position.y, button_down);
});

gamey.on("trackPadButtonRelease", function() {
  var position;
  position = NextEvent.mouse();
  return NextEvent.mouse_up(position.x, position.y, button_down);
});

link_button = function(gamepad, keycode) {
  gamey.on(gamepad, function() {
    console.log("" + gamepad + " becomes " + keycode);
    return NextEvent.key_down(keycode);
  });
  return gamey.on("" + gamepad + "Release", function() {
    return NextEvent.key_up(keycode);
  });
};

link_button('dPadUp', 'UpArrow');

link_button('dPadDown', 'DownArrow');

link_button('dPadLeft', 'LeftArrow');

link_button('dPadRight', 'RightArrow');

gamepad_graphic = document.getElementById('gamepad_graphic');

gamey.on("keydown", function(key) {
  var path;
  path = gamepad_graphic.contentDocument.getElementById("DS4_" + key);
  if (path) {
    return path.style.fill = 'red';
  }
});

gamey.on("keyup", function(key) {
  var path;
  path = gamepad_graphic.contentDocument.getElementById("DS4_" + key);
  if (path) {
    return path.style.fill = '';
  }
});

//# sourceMappingURL=shockmouse.js.map
